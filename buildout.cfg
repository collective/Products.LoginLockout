[buildout]
parts += 
   instance 
   test 
#   ipzope 
   vscode
extends =
    test-5.1.x.cfg
versions = versions
unzip = true
develop = .

[versions]

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
	Pillow
    Plone
    plone.reload
    plone.app.debugtoolbar
    Products.LoginLockout

[scripts]
recipe = zc.recipe.egg
eggs = 
    jarn.mkrelease
    ZopeSkel
    PasteScript
    PasteDeploy
    Paste
    templer.plone
    templer.plone.localcommands

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[ipzope]
recipe = zc.recipe.egg
eggs = ipython ${instance:eggs}
initialization =
    import sys, os
    os.environ["INSTANCE_HOME"] = "${instance:location}"
    argv_len = len(sys.argv)
    sys.argv[argv_len:argv_len] = "--profile=zope2".split()
scripts = ipython=ipzope


[vscode]
recipe = collective.recipe.vscode
eggs = ${test:eggs} ${instance:eggs}
enable-flake8 = true
enable-black = true
generate-envfile = true


[robot-server]
recipe = zc.recipe.egg
eggs =
    ${buildout:package-name} ${buildout:package-extras}
    plone.app.robotframework [reload]
initialization =
    sys.argv[1:] = ["${buildout:package-name}.testing.ROBOT_TESTING", "-v", "-p", "src/","-p","collective/","-p","Products"] + sys.argv[1:]
scripts = robot-server

[robot]
recipe = zc.recipe.egg
eggs =
    ${buildout:package-name} ${buildout:package-extras}
    plone.app.robotframework [reload]
initialization =
    sys.argv[1:] = sys.argv[1:] + ['collective']
scripts = robot

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
